package test

import org.specs2.mutable._

import play.api.db.slick.DB
import play.api.db.slick.Config.driver.simple._
import play.api.test._
import play.api.test.Helpers._
import models._


///create tests with pseudo data
///create country, players
///create users 2
///create games
///create bets for games
///create games 2
///create bets for games
///set game
///tally results
///special bets

///do all with json!
///look at jsonspec in slick-play-quickstart

class DBSpec extends Specification {

  "DB" should {
    "work as expected" in new WithApplication(FakeApplication(additionalConfiguration = inMemoryDatabase(
      options=Map("DATABASE_TO_UPPER" -> "false", "DB_CLOSE_DELAY" -> "-1")   
      ))) {

      import BetterDb._
     
//      DB.withSession { implicit s: Session => 
//        createTables()
//        val testbets = Seq(
//               Bet(None, 0, Result(0,0,false), 5, 10),
//               Bet(None, 1, Result(1,2,true), 5, 10)
//            ) 
//        bets.insertAll(testbets: _*)
//        bets.list.size === 2
//      }
    }

    "select the correct testing db settings by default" in new WithApplication(FakeApplication(additionalConfiguration = inMemoryDatabase())) {
      DB.withSession { implicit s: Session =>
        s.conn.getMetaData.getURL must startWith("jdbc:h2:mem:play-test")
      }
    }

    "use the default db settings when no other possible options are available" in new WithApplication {
      DB.withSession { implicit s: Session =>
        import BetterDb._
   //     ddl()
        //the generated ddl has to be converted to psql with
        //perl -p -i -e 's/BIGINT GENERATED BY DEFAULT AS IDENTITY\(START WITH 1\) NOT NULL/BIGSERIAL/'
        
        s.conn.getMetaData.getURL must equalTo("jdbc:postgresql:better")
      }
    }
  }

}
